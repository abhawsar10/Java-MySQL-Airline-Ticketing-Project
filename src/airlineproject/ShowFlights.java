/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlineproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.*;

/**
 *
 * @author Ankit Bhawsar
 */
public class ShowFlights extends javax.swing.JFrame {

    /**
     * Creates new form ShowFlights
     */
    public ShowFlights() {
        initComponents();
setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        this.fillTable();
    }
    
    public void fillTable(){
            
        
        
        try
        {

            DefaultTableModel model = new DefaultTableModel(new String[]{"Flight No.", "Flight Name", "Airplane",
                "Source","Destination","Departure","Arrival","First Available","Business Available","Economy Available",
                "First Price","Business Price","Economy Price"}, 0);

            Class.forName("com.mysql.jdbc.Driver");  
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3307/airline_db","root","");  

            String sql="SELECT * FROM flight;";
            PreparedStatement pst1;
            pst1 = con.prepareStatement(sql);        
            ResultSet rs = pst1.executeQuery(sql);

            String sql1,sql2;

            while(rs.next())
            {

                String a= rs.getString("flight_no");
                String b = rs.getString("flight_name");
                String c = rs.getString("airplane_name");
                String d =rs.getString("sid");
                String e =rs.getString("did");
                String f = rs.getString("time1");
                String g = rs.getString("time2");
                String h = rs.getString("no_first");
                String i = rs.getString("no_business");
                String j = rs.getString("no_economy");
                String k = rs.getString("price_first");
                String l = rs.getString("price_business");
                String m = rs.getString("price_economy");



                sql1="select * from location where loc_id=?;";
                PreparedStatement p1;
                p1=con.prepareStatement(sql1);
                p1.setString(1,d);
                ResultSet rs1=p1.executeQuery();
                rs1.next();
                String x=rs1.getString("city");

                sql2="select * from location where loc_id=?;";
                PreparedStatement p2;
                p2=con.prepareStatement(sql2);
                p2.setString(1,e);
                ResultSet rs2=p2.executeQuery();
                rs2.next();
                String y=rs2.getString("city");



                model.addRow(new Object[]{a,b,c,x,y,f,g,h,i,j,k,l,m});
            }
            
            FlightTable.setRowHeight(40);
            
            /*
            FlightTable.getColumnModel().getColumn(0).setWidth(20);
            FlightTable.getColumnModel().getColumn(1).setWidth(10);
            FlightTable.getColumnModel().getColumn(2).setWidth(10);
            FlightTable.getColumnModel().getColumn(3).setWidth(90);
            FlightTable.getColumnModel().getColumn(4).setWidth(90);
            FlightTable.getColumnModel().getColumn(6).setWidth(10);
            FlightTable.getColumnModel().getColumn(7).setWidth(10);
            FlightTable.getColumnModel().getColumn(8).setWidth(95);
            FlightTable.getColumnModel().getColumn(9).setWidth(40);
            FlightTable.getColumnModel().getColumn(10).setWidth(40);
            FlightTable.getColumnModel().getColumn(11).setWidth(9);
            FlightTable.getColumnModel().getColumn(12).setMinWidth(100);
            //FlightTable.getColumnModel().getColumn(13).setPreferredWidth(400);
            //FlightTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            
            */
            
            
            FlightTable.setModel(model);


        } 
        catch(Exception e){
                    System.out.println(e);
        }
    
     
    }

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CancelFlight = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FlightTable = new javax.swing.JTable();
        Entries1 = new javax.swing.JLabel();
        HomeButton = new javax.swing.JButton();
        Header = new javax.swing.JLabel();
        wall = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        getContentPane().setLayout(null);

        CancelFlight.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        CancelFlight.setText("CANCEL FLIGHT");
        CancelFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelFlightActionPerformed(evt);
            }
        });
        getContentPane().add(CancelFlight);
        CancelFlight.setBounds(790, 800, 360, 70);

        FlightTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        FlightTable.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        FlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight No.", "Flight Name", "Airplane", "Source", "Destination", "Departure", "Arrival", "Available FIRST ", "Available BUSINESS", "Available ECONOMY", "Price FIRST", "Price BUSINESS", "Price ECONOMY"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FlightTable.setToolTipText("");
        FlightTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        FlightTable.setIntercellSpacing(new java.awt.Dimension(2, 2));
        FlightTable.setName(""); // NOI18N
        FlightTable.setShowHorizontalLines(false);
        FlightTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(FlightTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(150, 160, 1640, 600);

        Entries1.setBackground(new java.awt.Color(0, 51, 102));
        Entries1.setFont(new java.awt.Font("SimSun", 0, 13)); // NOI18N
        Entries1.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Documents\\NetBeansProjects\\AirlineProject\\Pictures\\Silver.jpg")); // NOI18N
        Entries1.setText("jLabel3");
        getContentPane().add(Entries1);
        Entries1.setBounds(70, 120, 1790, 830);

        HomeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        HomeButton.setText("HOME");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(HomeButton);
        HomeButton.setBounds(1720, 30, 150, 40);

        Header.setBackground(new java.awt.Color(0, 0, 102));
        Header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Documents\\NetBeansProjects\\AirlineProject\\Pictures\\Header.jpg")); // NOI18N
        Header.setToolTipText("");
        Header.setRequestFocusEnabled(false);
        getContentPane().add(Header);
        Header.setBounds(0, 0, 1920, 100);

        wall.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        wall.setIcon(new javax.swing.ImageIcon("C:\\Users\\admin\\Documents\\NetBeansProjects\\AirlineProject\\Pictures\\Clouds'.jpg")); // NOI18N
        getContentPane().add(wall);
        wall.setBounds(1, 6, 1920, 1080);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed

        this.setVisible(false);
        new AdminHome().setVisible(true);
    }//GEN-LAST:event_HomeButtonActionPerformed

    private void CancelFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelFlightActionPerformed

        
        int selected = FlightTable.getSelectedRow();
        
        String toDelete = FlightTable.getModel().getValueAt(selected, 0).toString();   
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
                         Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3307/airline_db","root","");

            String query2="delete from booking where flight_no=?";
            PreparedStatement ps1;
            ps1=con.prepareStatement(query2);
            ps1.setString(1,toDelete);
            ps1.executeUpdate();
                       
            String query1="delete from flight where flight_no=?";
            PreparedStatement ps;
            ps=con.prepareStatement(query1);
            ps.setString(1,toDelete);
            ps.executeUpdate();
                       
            FlightTable.removeAll();
            this.fillTable();
            JOptionPane.showMessageDialog(this,"Flight Cancelled Successfully");  
            
            
            
        
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
        
        
        
        
    }//GEN-LAST:event_CancelFlightActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowFlights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowFlights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowFlights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowFlights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowFlights().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelFlight;
    private javax.swing.JLabel Entries1;
    private javax.swing.JTable FlightTable;
    private javax.swing.JLabel Header;
    private javax.swing.JButton HomeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel wall;
    // End of variables declaration//GEN-END:variables
}
